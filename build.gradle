buildscript {
  repositories {
    mavenCentral()
  }
  dependencies {
    classpath 'biz.aQute.bnd:biz.aQute.bnd.gradle:7.0.0'
  }
}

plugins {
  id 'java-library'
  id 'jacoco'
  id 'signing'
  id 'maven-publish'
  id 'io.github.gradle-nexus.publish-plugin' version '1.3.0'
}
apply plugin: 'biz.aQute.bnd.builder'


def getVersionName() {
  def errOut = new ByteArrayOutputStream()
  try {
    def stdOut = new ByteArrayOutputStream()
    exec {
      commandLine 'git', 'describe', '--tags'
      standardOutput = stdOut
      errorOutput = errOut
    }
    // strip of leading 'v'
    return stdOut.toString().trim().substring(1)
  } catch (ignore) {
    logger.info('Error running git describe (' + errOut.toString().trim() + '), defaulting to 0.0.0')
    return '0.0.0'
  }
}

project.group = 'org.pharmgkb'
project.version = getVersionName()

ext {
  baseName = 'pgkb-common'
  moduleName = 'org.pharmgkb.common'
  description = 'Common code shared among all PharmGKB projects.'
  url = 'https://github.com/PharmGKB/' + project.ext.baseName + '.git'
  scm = 'scm:git@github.com:PharmGKB/' + project.ext.baseName + '.git'
  orgName = 'PharmGKB'
  orgUrl = 'https://www.pharmgkb.org'
  // grab properties from environment for CI
  sonatypeUser = project.hasProperty('ossrhUsername') ? ossrhUsername : System.getenv('OSSRH_USERNAME')
  sonatypePwd  = project.hasProperty('ossrhPassword') ? ossrhPassword : System.getenv('OSSRH_PASSWORD')
  sonatypeStagingProfileId = project.hasProperty('ossrhStagingProfileId') ? ossrhPassword : System.getenv('OSSRH_STAGING_PROFILE_ID')
}

// cannot modify signing directly, have to do it like this
// reference: https://getstream.io/blog/publishing-libraries-to-mavencentral-2021/
ext['signing.keyId'] = ''
ext['signing.password'] = ''
ext['signing.secretKeyRingFile'] = ''
if (System.getenv('SIGNING_KEY')) {
  ext['signing.key'] =  System.getenv('SIGNING_KEY')
  ext['signing.password'] = System.getenv('SIGNING_PASSWORD')
}  else if (project.hasProperty('gpg.key')) {
  ext['signing.key'] =  project.getProperty('gpg.key')
  ext['signing.password'] = project.getProperty('gpg.password')
}  else if (project.hasProperty('gpg.keyId')) {
  ext['signing.keyId'] =  project.getProperty('gpg.keyId')
  ext['signing.password'] = project.getProperty('gpg.password')
  ext['signing.secretKeyRingFile'] =  project.getProperty('gpg.secretKeyRingFile')
} else if (System.getenv('SIGNING_KEY_ID') != null) {
  ext['signing.keyId'] =  System.getenv('SIGNING_KEY_ID')
  ext['signing.password'] = System.getenv('SIGNING_PASSWORD')
  ext['signing.secretKeyRingFile'] =  System.getenv('SIGNING_SECRET_KEY_RING_FILE')
}


repositories {
  mavenCentral()
}

dependencies {
  implementation group: 'commons-beanutils', name: 'commons-beanutils', version: '1.9.4'
  implementation group: 'commons-cli', name: 'commons-cli', version: '1.7.0'
  implementation group: 'commons-codec', name: 'commons-codec', version: '1.16.1'
  implementation group: 'commons-collections', name: 'commons-collections', version: '3.2.2'
  implementation group: 'commons-io', name: 'commons-io', version: '2.16.1'
  implementation group: 'com.google.guava', name: 'guava', version: '33.1.0-jre'
  implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.14.0'
  implementation group: 'org.apache.commons', name: 'commons-text', version: '1.12.0'
  implementation group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.5.14'
  implementation group: 'org.checkerframework', name: 'checker-qual', version: '3.39.0'
  implementation group: 'org.slf4j', name: 'slf4j-api', version: '2.0.13'

  testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter', version: '5.10.2'
  testImplementation group: 'org.hamcrest', name: 'hamcrest', version: '2.2'
}


java {
  sourceCompatibility = JavaVersion.VERSION_1_8
  targetCompatibility = JavaVersion.VERSION_1_8
}

apply from: 'pgkb-build.gradle'
